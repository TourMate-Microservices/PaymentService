basePath: /
definitions:
  entity.Feedback:
    properties:
      content:
        type: string
      createdDate:
        type: string
      customerId:
        type: integer
      feedbackId:
        type: integer
      invoiceId:
        type: integer
      isDeleted:
        type: boolean
      rating:
        type: integer
      serviceId:
        type: integer
      tourGuideId:
        type: integer
      updatedAt:
        type: string
    type: object
  entity.Payment:
    properties:
      createdAt:
        type: string
      customerId:
        type: integer
      invoiceId:
        type: integer
      paymentId:
        description: PaymentType   string    `json:"paymentType"` // bo^' bo? theo
          y' m
        type: integer
      paymentMethod:
        type: string
      price:
        type: number
      serviceId:
        type: integer
      status:
        description: e.g., "paid", "unpaid", "pending"
        type: string
    type: object
  entity.PlatformFeedback:
    properties:
      content:
        type: string
      createdAt:
        type: string
      customerId:
        type: integer
      feedbackId:
        type: integer
      paymentId:
        type: integer
      rating:
        type: integer
    type: object
  entity.Revenue:
    properties:
      actualReceived:
        type: number
      createdAt:
        type: string
      invoiceId:
        type: integer
      paymentId:
        type: integer
      paymentStatus:
        type: boolean
      platformCommission:
        type: number
      revenueId:
        type: integer
      totalAmount:
        type: number
      tourGuideId:
        type: integer
    type: object
  pb.TourServiceRatingResponse:
    properties:
      rating:
        type: number
      reviewCount:
        type: integer
    type: object
  request.CreateFeedbackRequest:
    properties:
      content:
        type: string
      customerId:
        type: integer
      invoiceId:
        type: integer
      rating:
        maximum: 5
        type: integer
      serviceId:
        type: integer
      tourGuideId:
        type: integer
    required:
    - content
    - customerId
    - invoiceId
    - rating
    - serviceId
    - tourGuideId
    type: object
  request.CreatePaymentRequest:
    properties:
      customerId:
        type: integer
      invoiceId:
        type: integer
      paymentMethod:
        type: string
      price:
        type: number
      serviceId:
        type: integer
    required:
    - customerId
    - invoiceId
    - paymentMethod
    - price
    - serviceId
    type: object
  request.CreatePayosTransactionRequest:
    properties:
      amount:
        type: number
      invoiceId:
        type: integer
    required:
    - amount
    - invoiceId
    type: object
  request.CreatePlatformFeedbackRequest:
    properties:
      content:
        type: string
      customerId:
        type: integer
      paymentId:
        type: integer
      rating:
        maximum: 5
        type: integer
    required:
    - customerId
    - paymentId
    - rating
    type: object
  request.CreateRevenueRequest:
    properties:
      actualReceived:
        type: number
      invoiceId:
        type: integer
      paymentId:
        type: integer
      paymentStatus:
        type: boolean
      platformCommission:
        type: number
      totalAmount:
        type: number
      tourGuideId:
        type: integer
    required:
    - actualReceived
    - invoiceId
    - paymentId
    - paymentStatus
    - platformCommission
    - totalAmount
    - tourGuideId
    type: object
  request.RemoveFeedbackRequest:
    properties:
      actorId:
        type: integer
      feedbackId:
        type: integer
    required:
    - actorId
    - feedbackId
    type: object
  request.UpdateFeedbackRequest:
    properties:
      content:
        type: string
      rating:
        maximum: 5
        type: integer
      request:
        $ref: '#/definitions/request.RemoveFeedbackRequest'
    type: object
  request.UpdatePaymentRequest:
    properties:
      method:
        type: string
      paymentId:
        type: integer
    required:
    - paymentId
    type: object
  request.UpdatePlatformFeedbackRequest:
    properties:
      actorId:
        type: integer
      content:
        type: string
      feedbackId:
        type: integer
      rating:
        type: integer
    required:
    - actorId
    - feedbackId
    type: object
  request.UpdateRevenueRequest:
    properties:
      actualReceived:
        type: number
      invoiceId:
        type: integer
      paymentId:
        type: integer
      paymentStatus:
        type: boolean
      platformCommission:
        type: number
      revenueId:
        type: integer
      totalAmount:
        type: number
      tourGuideId:
        type: integer
    type: object
  response.MessageApiResponse:
    properties:
      message:
        type: string
    type: object
  response.MonthlyRevenueResponse:
    properties:
      completedPayments:
        type: integer
      growthPercentage:
        type: number
      month:
        type: integer
      netRevenue:
        type: number
      pendingPayments:
        type: integer
      platformFee:
        type: number
      totalRecords:
        type: integer
      totalRevenue:
        type: number
      year:
        type: integer
    type: object
  response.PaginationDataResponse:
    properties:
      data: {}
      has_next:
        type: boolean
      has_previous:
        type: boolean
      page:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  response.PaymentWithServiceNameResponse:
    properties:
      createdAt:
        type: string
      paymentId:
        type: integer
      price:
        type: number
      serviceId:
        type: integer
      serviceName:
        type: string
    type: object
  response.RevenueGrowthPercentageResponse:
    properties:
      growthPercentage:
        type: number
    type: object
  response.RevenueResponse:
    properties:
      actualReceived:
        type: number
      createdAt:
        type: string
      invoiceId:
        type: integer
      paymentId:
        type: integer
      paymentStatus:
        type: boolean
      platformCommission:
        type: number
      revenueId:
        type: integer
      totalAmount:
        type: number
      tourGuideId:
        type: integer
      tourGuideName:
        type: string
    type: object
  response.RevenueStatusResponse:
    properties:
      completedPayments:
        type: integer
      monthlyGrowth:
        type: number
      netRevenue:
        type: number
      pendingPayments:
        type: integer
      platformFee:
        type: number
      revenueList:
        items:
          $ref: '#/definitions/response.RevenueResponse'
        type: array
      totalRecords:
        type: integer
      totalRevenue:
        type: number
    type: object
  response.UrlResponse:
    properties:
      url:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for Payment service
  title: Tourmate - Payment Service API
  version: "1.0"
paths:
  /api/v1/platform-feedbacks:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of platform feedbacks with optional filters
      parameters:
      - description: Search keyword
        in: query
        name: keyword
        type: string
      - description: Filter property
        in: query
        name: filterProp
        type: string
      - description: Sort order (ASC or DESC)
        in: query
        name: order
        type: string
      - description: Customer ID
        in: query
        name: customerId
        type: integer
      - description: Rating
        in: query
        name: rating
        type: integer
      - description: Page index
        in: query
        name: pageIndex
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginationDataResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get all platform feedbacks
      tags:
      - platform-feedbacks
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Platform Feedback Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreatePlatformFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Create a new feedback
      tags:
      - platform-feedbacks
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Feedback Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePlatformFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Update an existing feedback
      tags:
      - platform-feedbacks
  /api/v1/platform-feedbacks/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Platform Feedback ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PlatformFeedback'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get a single platform feedback by ID
      tags:
      - platform-feedbacks
  /api/v1/platform-feedbacks/customer/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve platform feedbacks filtered by customer ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Search keyword
        in: query
        name: keyword
        type: string
      - description: Filter property
        in: query
        name: filterProp
        type: string
      - description: Sort order (ASC or DESC)
        in: query
        name: order
        type: string
      - description: Rating
        in: query
        name: rating
        type: integer
      - description: Page index
        in: query
        name: pageIndex
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginationDataResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get platform feedbacks by user
      tags:
      - platform-feedbacks
  /payment-service/api/v1/feedbacks:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Remove Feedback Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RemoveFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Remove a feedback
      tags:
      - feedbacks
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of feedbacks with optional filters
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Search keyword
        in: query
        name: keyword
        type: string
      - description: Filter property
        in: query
        name: filterProp
        type: string
      - description: Sort order (ASC or DESC)
        in: query
        name: order
        type: string
      - description: Rating
        in: query
        name: rating
        type: integer
      - description: The owner ID of this feedback
        in: query
        name: customerId
        type: integer
      - description: Tour guide ID
        in: query
        name: tourGuideId
        type: integer
      - description: Invoice ID
        in: query
        name: invoiceId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginationDataResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get all feedbacks
      tags:
      - feedbacks
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Feedback Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Feedback'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Create a new feedback
      tags:
      - feedbacks
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Feedback Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Feedback'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Update an existing feedback
      tags:
      - feedbacks
  /payment-service/api/v1/feedbacks/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Feedback'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get a single feedback by ID
      tags:
      - feedbacks
  /payment-service/api/v1/feedbacks/test-grpc/{id}:
    get:
      consumes:
      - application/json
      description: Calls the gRPC feedback service to retrieve average rating and
        total count for a tour service
      parameters:
      - description: Tour service ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.TourServiceRatingResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      summary: Test gRPC call to get payment service rating
      tags:
      - test-grpc
  /payment-service/api/v1/feedbacks/tourGuide/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of feedbacks to a specific tour guide
      parameters:
      - description: Tour Guide ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page Index for pagination (starts from 1)
        in: query
        name: pageIndex
        type: integer
      - description: Number of items per page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginationDataResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      summary: Get feedbacks of a tour guide
      tags:
      - feedbacks
  /payment-service/api/v1/feedbacks/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve feedbacks filtered by customer ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Search keyword
        in: query
        name: keyword
        type: string
      - description: Filter property
        in: query
        name: filterProp
        type: string
      - description: Sort order (ASC or DESC)
        in: query
        name: order
        type: string
      - description: Rating
        in: query
        name: rating
        type: integer
      - description: Tour guide ID
        in: query
        name: tourGuideId
        type: integer
      - description: Invoice ID
        in: query
        name: invoiceId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginationDataResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get feedbacks by user
      tags:
      - feedbacks
  /payment-service/api/v1/payments:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of payments
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Payment method
        in: query
        name: method
        type: string
      - description: Customer ID
        in: query
        name: customerId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginationDataResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get all payments
      tags:
      - payments
  /payment-service/api/v1/payments/{id}:
    get:
      description: Retrieve a single payment record by its ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Payment'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get payment by ID
      tags:
      - payments
  /payment-service/api/v1/payments/create:
    post:
      consumes:
      - application/json
      description: Creates a new payment
      parameters:
      - description: Create Payment Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreatePaymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Payment'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Create a payment
      tags:
      - payments
  /payment-service/api/v1/payments/create-embedded-payment-link:
    post:
      consumes:
      - application/json
      description: Initiates a PayOS transaction with the given request body
      parameters:
      - description: PayOS Transaction Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreatePayosTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UrlResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      summary: Create a PayOS Transaction
      tags:
      - payments
  /payment-service/api/v1/payments/customer/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of payments made by a specific customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Search keyword
        in: query
        name: keyword
        type: string
      - description: Filter property (e.g. date, price)
        in: query
        name: filterProp
        type: string
      - description: Sort order (ASC or DESC)
        in: query
        name: order
        type: string
      - description: Payment Method (e.g. VTP, GHTK)
        in: query
        name: method
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginationDataResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get payments by user ID
      tags:
      - payments
  /payment-service/api/v1/payments/update:
    put:
      consumes:
      - application/json
      description: Update payment details
      parameters:
      - description: UpdatePaymentRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Update a payment record
      tags:
      - payments
  /payment-service/api/v1/payments/with-service-name/{id}:
    get:
      description: Retrieve a single payment record with service information by its
        ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaymentWithServiceNameResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get payment with service information by ID
      tags:
      - payments
  /payment-service/api/v1/revenues:
    get:
      consumes:
      - application/json
      description: Retrieves revenues with optional filters
      parameters:
      - in: query
        maximum: 12
        name: month
        type: integer
      - in: query
        name: pageNumber
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: paymentStatus
        type: boolean
      - in: query
        name: tourGuideId
        required: true
        type: integer
      - in: query
        name: year
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.RevenueResponse'
            type: array
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get all revenue entries
      tags:
      - revenues
    post:
      consumes:
      - application/json
      description: Adds a new revenue entry
      parameters:
      - description: Create Revenue Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateRevenueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RevenueResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Create a revenue record
      tags:
      - revenues
  /payment-service/api/v1/revenues/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves revenue details by ID
      parameters:
      - description: Revenue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Revenue'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get a single revenue record
      tags:
      - revenues
    put:
      consumes:
      - application/json
      description: Updates an existing revenue entry
      parameters:
      - description: Revenue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Revenue Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRevenueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RevenueResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Update a revenue record
      tags:
      - revenues
  /payment-service/api/v1/revenues/growth/{id}:
    get:
      consumes:
      - application/json
      description: Calculates revenue growth over time
      parameters:
      - description: Tour Guide ID
        in: path
        name: id
        required: true
        type: integer
      - in: query
        maximum: 12
        name: month
        required: true
        type: integer
      - in: query
        name: tourGuideId
        required: true
        type: integer
      - in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RevenueGrowthPercentageResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get growth percentage
      tags:
      - revenues
  /payment-service/api/v1/revenues/monthly/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves revenue grouped by month
      parameters:
      - description: Tour Guide ID
        in: path
        name: id
        required: true
        type: integer
      - in: query
        maximum: 12
        name: month
        required: true
        type: integer
      - in: query
        name: tourGuideId
        required: true
        type: integer
      - in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MonthlyRevenueResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get revenue by month
      tags:
      - revenues
  /payment-service/api/v1/revenues/stats/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves revenue stats
      parameters:
      - description: Revenue ID
        in: path
        name: id
        required: true
        type: integer
      - in: query
        maximum: 12
        name: month
        required: true
        type: integer
      - in: query
        name: tourGuideId
        required: true
        type: integer
      - in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RevenueStatusResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Get revenue stats
      tags:
      - revenues
  /payment-service/api/v1/revenues{id}:
    delete:
      consumes:
      - application/json
      description: Removes a revenue entry by ID
      parameters:
      - description: Revenue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "400":
          description: Invalid data. Please try again.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "401":
          description: You have no rights to access this action.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
        "500":
          description: There is something wrong in the system during the process.
            Please try again later.
          schema:
            $ref: '#/definitions/response.MessageApiResponse'
      security:
      - BearerAuth: []
      summary: Delete a revenue record
      tags:
      - revenues
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
